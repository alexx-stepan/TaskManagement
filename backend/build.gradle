plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'com.bmuschko.docker-remote-api' version '4.6.2'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group 'com.alexxstepan.taskmanagement'
version '1.0'

sourceCompatibility = 1.8

mainClassName = 'com.alexxstepan.taskmanagement.Application'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.postgresql:postgresql'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

//    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
}

import com.bmuschko.gradle.docker.tasks.image.*

/**
 * DOCKER
 */

def dockerBuildDir = 'docker/web'

task syncJar(type: Copy) {
    dependsOn assemble
    from jar.archivePath
    into rootProject.file("$dockerBuildDir")
}

task createDockerFile(type: Dockerfile) {
    dependsOn syncJar
    destFile = rootProject.file("$dockerBuildDir/Dockerfile")
    from 'openjdk:8-jre-alpine'

    copyFile 'entrypoint.sh', '/usr/bin/entrypoint.sh'
    runCommand('''sh -c 'chmod +x /usr/bin/entrypoint.sh' ''')
    copyFile jar.archiveName, '/app/taskmanagement.jar'
    entryPoint 'sh', '/usr/bin/entrypoint.sh' // 'sh' is to avoid 'no such file found'

    exposePort 8080
}

task cleanUpWebDir() {
    delete rootProject.file("$dockerBuildDir/$jar.archiveName")
    delete rootProject.file("$dockerBuildDir/Dockerfile")
}

task runCompose(type:Exec) {
    workingDir rootProject.file("docker")
    commandLine 'docker-compose', 'up', '--build', '-d'
}

task runApp() {
    dependsOn bootDistZip

    finalizedBy(runCompose)
}

task stopApp(type:Exec) {
    workingDir rootProject.file("docker")
    commandLine 'docker-compose', 'down'
}

clean.finalizedBy(cleanUpWebDir)

bootDistZip.finalizedBy(createDockerFile)
